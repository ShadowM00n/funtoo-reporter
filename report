#!/usr/bin/env perl

## Author : Joshua S. Day (haxmeister)
## Purpose : A anonymous funtoo data reporting tool

## written with the following additional packages
## from gentoo/funtoo repository:
##
## dev-perl/JSON-2.900.0

## version 1.0

use strict;
use warnings;
use JSON;
use Term::ANSIColor;
use lib "$ENV{PWD}/modules";
use Report;
use Search::Elasticsearch;


my %es_config;
$es_config{node} = 'http://elk.liguros.net:9200';

if (@ARGV) {
    if ( $ARGV[0] eq 'show-json' ) {
        my %report      = report_from_config();
        my $json        = JSON->new->allow_nonref;
        my $json_pretty = $json->pretty->encode( \%report );
        print $json_pretty;

    }

    if ( $ARGV[0] eq 'send' ) {
        my %report = report_from_config();
        my $e      = Search::Elasticsearch->new(
            nodes => $es_config{node},
            debug => 1
        );
        $e->index(

            # load params for elastic search into report
            index => 'funtoo',
            type  => 'user',
            id    => $es_config{'id'},
            body  => \%report
        );

    }

    if ( $ARGV[0] eq 'help' ) {
        show_help();
    }

}
else {
    show_help();
}

sub show_help {
    print color('bold');
    print "Funtoo anonymous data reporting tool usage: \n\n";
    print color('bold blue');
    print "report send";
    print color('reset');
    print "\t\t Send the report to funtoo's data collection\n";
    print color('bold blue');
    print "report show-json";
    print color('reset');
    print " \t Show the output that will be sent, in JSON format\n";
    print color('bold blue');
    print "report help";
    print color('reset');
    print " \t\t Show this help list\n";
    print color('bold');
    print "\nOutput can be ommitted by modifying the /etc/report.conf file\n";
    print color('reset');
    return 0;
}

sub report_from_config {
    my %config = Report::user_config();
    my %hash;

    if ( exists $config{'UUID'} ) {
        $es_config{'id'} = $config{'UUID'};
    }
    else {
        $es_config{'id'} = Report::add_uuid();
    }
    my %reports = (
        'boot-dir-info' => \&Report::get_boot_dir_info,
        'cpu-info'      => \&Report::get_cpu_info,
        'kernel-info'   => \&Report::get_kernel_info,
        'kit-info'      => \&Report::get_kit_info,
        'mem-info'      => \&Report::get_mem_info,
        'profile-info'  => \&Report::get_profile_info,
        'version-info'  => \&Report::get_version_info,
        'world-info'    => \&Report::get_world_info
    );

    for my $report ( sort keys %reports ) {
        exists $config{$report} or next;
        $config{$report} eq 'y' or next;
        $hash{$report} = $reports{$report}->();
    }

    # my $date = localtime();
    # $hash{'timestamp'} = $date;

    return %hash;
}
